{
	"info": {
		"_postman_id": "ba664a1c-f0e1-4ebe-8f0a-e3169d540162",
		"name": "Intermediate Apps Infra",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Custom Device",
			"item": [
				{
					"name": "Create Custom Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"displayName\" : \"F5 Firewall 24\",\r\n  \"ipAddresses\" : [\"172.16.115.211\"],\r\n  \"listenPorts\" : [\"9999\"],\r\n  \"type\" : \"F5-Firewall\",\r\n  \"favicon\" : \"http://assets.dynatrace.com/global/icons/f5.png\",\r\n  \"configUrl\" : \"http://192.128.0.1:8080\",\r\n  \"tags\": [\r\n    \"F5\"\r\n  ],\r\n  \"properties\" : {\r\n    \"Data Center\": \"London W2\",\r\n    \"Hall\": \"4\",\r\n    \"Rack\": \"7\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://{{Tenant}}/api/v1/entity/infrastructure/custom/f5-LondonW2-4-7?api-token={{API-Token}}",
							"protocol": "https",
							"host": [
								"{{Tenant}}"
							],
							"path": [
								"api",
								"v1",
								"entity",
								"infrastructure",
								"custom",
								"f5-LondonW2-4-7"
							],
							"query": [
								{
									"key": "api-token",
									"value": "{{API-Token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Custom Metric",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"displayName\" : \"Dropped TCP connections\",\r\n\t\"unit\" : \"Count\",\r\n\t\"dimensions\": [\t\t\r\n\t\t\"nic\"\r\n\t],\r\n\t\"types\": [\r\n\t\t\"F5-Firewall\"\r\n\t]\r\n}"
						},
						"url": {
							"raw": "https://{{Tenant}}/api/v1/timeseries/custom:firewall.connections.dropped?api-token={{API-Token}}",
							"protocol": "https",
							"host": [
								"{{Tenant}}"
							],
							"path": [
								"api",
								"v1",
								"timeseries",
								"custom:firewall.connections.dropped"
							],
							"query": [
								{
									"key": "api-token",
									"value": "{{API-Token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Push Metrics to Custom Device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 60000);\r",
									"Time = Date.now();\r",
									"pm.environment.set(\"Time\", Time);\r",
									"var numberOfIterations = pm.environment.get(\"numberOfIterations\");\r",
									"if (!numberOfIterations) {\r",
									"    numberOfIterations = 5;\r",
									"}\r",
									"numberOfIterations--;\r",
									"var drops = Math.floor(0 + Math.random() * 100);\r",
									"pm.environment.set(\"drops\", drops);\r",
									"var drops2 = Math.floor(0 + Math.random() * 100);\r",
									"pm.environment.set(\"drops2\", drops2);\r",
									"pm.environment.set(\"numberOfIterations\", numberOfIterations);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var numberOfIterations = pm.environment.get(\"numberOfIterations\");\r",
									"if (numberOfIterations !== 0) {\r",
									"    postman.setNextRequest(\"Push Metrics to Custom Device\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tags\": [\r\n    \"F5\"\r\n  ],\r\n   \"type\" : \"F5-Firewall\",\r\n  \"series\" : [\r\n    {\r\n      \"timeseriesId\" : \"custom:firewall.connections.dropped\",\r\n      \"dimensions\" : {\r\n        \"nic\" : \"ethernetcard1\"  \r\n      },\r\n      \"dataPoints\" : [\r\n        [ {{Time}}, {{drops}} ]\r\n       ]\r\n    },\r\n    {\r\n      \"timeseriesId\" : \"custom:firewall.connections.dropped\",\r\n      \"dimensions\" : {\r\n        \"nic\" : \"ethernetcard2\"  \r\n      },\r\n      \"dataPoints\" : [\r\n        [ {{Time}}, {{drops2}} ]\r\n       ]\r\n    }\r\n\t]\r\n}"
						},
						"url": {
							"raw": "https://{{Tenant}}/api/v1/entity/infrastructure/custom/f5-LondonW2-4-7?api-token={{API-Token}}",
							"protocol": "https",
							"host": [
								"{{Tenant}}"
							],
							"path": [
								"api",
								"v1",
								"entity",
								"infrastructure",
								"custom",
								"f5-LondonW2-4-7"
							],
							"query": [
								{
									"key": "api-token",
									"value": "{{API-Token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Hosts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Parse the response to extract the public host names for your newly deployed ec2 Instances.\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"var filteredProdData = jsonData.filter(function (item) {\r",
							"  if (!item.hostGroup.name) {\r",
							"    return\r",
							"  }\r",
							"  return item.hostGroup.name.includes(\"production\");\r",
							"});\r",
							"var filteredTestData = jsonData.filter(function (item) {\r",
							"  if (!item.hostGroup.name) {\r",
							"    return\r",
							"  }\r",
							"  return item.hostGroup.name.includes(\"test\");\r",
							"});\r",
							"pm.environment.set(\"prodHost\", filteredProdData[0].entityId);\r",
							"pm.environment.set(\"testHost\", filteredTestData[0].entityId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v1/entity/infrastructure/hosts?api-token={{API-Token}}",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v1",
						"entity",
						"infrastructure",
						"hosts"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						},
						{
							"key": "includeDetails",
							"value": "false",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Hosts V2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v2/entities?api-token={{API-Token}}&entitySelector=type(\"HOST\")",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v2",
						"entities"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						},
						{
							"key": "entitySelector",
							"value": "type(\"HOST\")"
						},
						{
							"key": "fields",
							"value": "tags, properties",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Hosts V2 Fields",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v2/entityTypes/HOST?api-token={{API-Token}}",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v2",
						"entityTypes",
						"HOST"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Availability",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v1/timeseries?api-token={{API-Token}}&timeseriesId=com.dynatrace.builtin:host.availability&relativeTime=hour",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v1",
						"timeseries"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						},
						{
							"key": "timeseriesId",
							"value": "com.dynatrace.builtin:host.availability"
						},
						{
							"key": "relativeTime",
							"value": "hour"
						},
						{
							"key": "queryMode",
							"value": "total",
							"disabled": true
						},
						{
							"key": "entity",
							"value": "{{prodHost}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Host CPU V2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v2/metrics/query?api-token={{API-Token}}&metricSelector=builtin:host.cpu.(usage,idle)&from=now-1h&entitySelector=type(\"HOST\"),entityId(\"{{prodHost}}\")",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v2",
						"metrics",
						"query"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						},
						{
							"key": "metricSelector",
							"value": "builtin:host.cpu.(usage,idle)"
						},
						{
							"key": "from",
							"value": "now-1h"
						},
						{
							"key": "entitySelector",
							"value": "type(\"HOST\"),entityId(\"{{prodHost}}\")"
						},
						{
							"key": "resolution",
							"value": "inf",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Problems",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{Tenant}}/api/v2/problems?api-token={{API-Token}}&from=now-1d",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v2",
						"problems"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						},
						{
							"key": "from",
							"value": "now-1d"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Maintenance Window",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"easyTravel Prod app update\",\r\n  \"description\": \"Weekly deployment of easyTravel update\",\r\n  \"type\": \"PLANNED\",\r\n  \"suppression\": \"DETECT_PROBLEMS_DONT_ALERT\",\r\n  \"scope\": {\r\n    \"entities\": [\r\n    ],\r\n    \"matches\": [\r\n      {\r\n        \"type\": \"HOST\",\r\n        \"tags\": [\r\n          {\r\n            \"context\": \"CONTEXTLESS\",\r\n            \"key\": \"production\"\r\n          }\r\n        ],\r\n        \"tagCombination\": \"OR\"\r\n      }\r\n    ]\r\n  },\r\n  \"schedule\": {\r\n    \"recurrenceType\": \"WEEKLY\",\r\n    \"recurrence\": {\r\n      \"dayOfWeek\": \"SUNDAY\",\r\n      \"startTime\": \"01:00\",\r\n      \"durationMinutes\": \"90\"\r\n    },\r\n    \"start\": \"2021-01-11 01:00\",\r\n    \"end\": \"2025-01-11 02:30\",\r\n    \"zoneId\": \"Europe/Vienna\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://{{Tenant}}/api/config/v1/maintenanceWindows?api-token={{API-Token}}",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"config",
						"v1",
						"maintenanceWindows"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Annotation Event",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"eventType\": \"CUSTOM_ANNOTATION\",\r\n  \"attachRules\": {\r\n\r\n    \"tagRule\": [\r\n      {\r\n        \"meTypes\": [\r\n          \"HOST\"\r\n        ],\r\n        \"tags\": [\r\n          {\r\n            \"context\": \"CONTEXTLESS\",\r\n            \"key\": \"test\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  \"source\": \"OpsControl\",\r\n  \"annotationType\": \"LoadTest\",\r\n  \"annotationDescription\": \"Loadtest has begun\"\r\n}"
				},
				"url": {
					"raw": "https://{{Tenant}}/api/v1/events?api-token={{API-Token}}",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v1",
						"events"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Annotation Event Detailed",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"endTime = Date.now();\r",
							"startTime = endTime - 360000;\r",
							"pm.environment.set(\"startTime\", startTime);\r",
							"pm.environment.set(\"endTime\", endTime);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"eventType\": \"CUSTOM_ANNOTATION\",\r\n  \"start\": \"{{startTime}}\",\r\n  \"end\": \"{{endTime}}\",\r\n  \"attachRules\": {\r\n\t\"entityIds\": [\r\n    ],\r\n    \"tagRule\": [\r\n      {\r\n        \"meTypes\": [\r\n          \"HOST\"\r\n        ],\r\n        \"tags\": [\r\n          {\r\n            \"context\": \"CONTEXTLESS\",\r\n            \"key\": \"production\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  \"source\": \"https://github.com/pattons-blog/eventsapi\",\r\n  \"description\": \"Marketing Special Event\",\r\n  \"annotationType\": \"Sales Special\",\r\n  \"annotationDescription\": \"Special Sale\",\r\n  \"customProperties\": {\r\n  \t\t\t\"Owner\": \"John Smith\",\r\n  \t\t\t\"Email\": \"john.smith@test.com\",\r\n  \t\t\t\"Campaign Name\": \"Madness1\",\r\n  \t\t\t\"Campaign Description\": \"Twitter special marketing campaign\"\r\n  \t\t}\t\r\n}"
				},
				"url": {
					"raw": "https://{{Tenant}}/api/v1/events?api-token={{API-Token}}",
					"protocol": "https",
					"host": [
						"{{Tenant}}"
					],
					"path": [
						"api",
						"v1",
						"events"
					],
					"query": [
						{
							"key": "api-token",
							"value": "{{API-Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "OneAgent metric API",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain; charset=utf-8",
						"type": "text"
					},
					{
						"key": "cha",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "cpu.temperature,cpu=1 55\r\ncpu.temperature,cpu=2 15\r\ncpu.temperature,cpu=3 30\r\ncpu.temperature,cpu=4 88",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:14499/metrics/ingest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "14499",
					"path": [
						"metrics",
						"ingest"
					]
				}
			},
			"response": []
		}
	]
}